__d(function(t,e,r,a){"use strict";function n(t,e,r){for(var a=[],n=0;n<e;n++)for(var i=r(n),s=i.offset+i.length,l=0;l<t.length;l++)if(null==a[l]&&s>=t[l]&&(a[l]=n,l===t.length-1))return f(a.length===t.length,"bad offsets input, should be in increasing order "+JSON.stringify(t)),a;return a}function i(t,e){return e.last-e.first+1-Math.max(0,1+Math.min(e.last,t.last)-Math.max(e.first,t.first))}function s(t,e,r,a){var s=t.data,f=t.getItemCount,l=t.maxToRenderPerBatch,o=t.windowSize,u=f(s);if(0===u)return e;var h=a.offset,m=a.velocity,c=a.visibleLength,d=Math.max(0,h),v=d+c,g=(o-1)*c,b=.5,w=m>1?"after":m<-1?"before":"none",x=Math.max(0,d-(1-b)*g),M=Math.max(0,v+b*g),p=n([x,d,v,M],t.getItemCount(t.data),r),y=babelHelpers.slicedToArray(p,4),C=y[0],O=y[1],L=y[2],R=y[3];C=null==C?0:C,O=null==O?Math.max(0,C):O,R=null==R?u-1:R,L=null==L?Math.min(R,O+l-1):L;for(var S={first:O,last:L},T=i(e,S);;){if(O<=C&&L>=R)break;var k=T>=l,B=O<=e.first||O>e.last,I=O>C&&(!k||!B),J=L>=e.last||L<e.first,N=L<R&&(!k||!J);if(k&&!I&&!N)break;!I||"after"===w&&N&&J||(B&&T++,O--),!N||"before"===w&&I&&B||(J&&T++,L++)}if(!(L>=O&&O>=0&&L<u&&O>=C&&L<=R&&O<=S.first&&L>=S.last))throw new Error("Bad window calculation "+JSON.stringify({first:O,last:L,itemCount:u,overscanFirst:C,overscanLast:R,visible:S}));return{first:O,last:L}}var f=e(-2922795955),l={computeWindowedRenderLimits:s,elementsThatOverlapOffsets:n,newRangeCount:i};r.exports=l},10317435910);
